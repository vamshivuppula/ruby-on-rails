historical_account_data = JSON.parse('<%= raw escape_javascript(@historical_account_data.to_json) %>')
process_date = JSON.parse('<%= raw escape_javascript(@all_dates.to_json) %>')
all_dates_in_range = getDates(process_date[0],process_date[(process_date.length) - 1])
claim_data = JSON.parse('<%= raw escape_javascript(@claim_data.to_json) %>')
remit_data = JSON.parse('<%= raw escape_javascript(@remit_data.to_json) %>')
charges_data = JSON.parse('<%= raw escape_javascript(@charges_data.to_json) %>')
transactions_data = JSON.parse('<%= raw escape_javascript(@transactions_data.to_json) %>')
var ctx = document.getElementById('historical-account-balances-visualization');
document.getElementById('historical-chart-search-start-date').value = moment(process_date[0]).format("MM/DD/YYYY");
document.getElementById('historical-chart-search-end-date').value = moment(process_date[(process_date.length) - 1]).format("MM/DD/YYYY");

if (myChart) {
        myChart.destroy();
      }
var myChart = new Chart(ctx, {
    type: 'line',
    data: {
    labels: all_dates_in_range,
        datasets: [{
        label: 'Account',
        data: historical_account_data,
        fill: false,
        "borderColor": 'rgba(255, 99, 132, 1)',
        hoverRadius: 3,
    },{
        label: 'Claims',
        data: claim_data,
        type: 'bubble',
        "backgroundColor":'rgba(54, 162, 235, 1)',
        radius:12,
        hoverRadius: 3,
    },{
        label: 'Remits',
        data: remit_data,
        type: 'bubble',
        "backgroundColor":'rgba(75, 192, 192, 1)',
        radius:12,
        hoverRadius: 3,
    },{
        label: 'Charges',
        data: charges_data,
        type: 'bubble',
        "backgroundColor":'rgba(153, 102, 255, 1)',
        radius:12,
        hoverRadius: 3,
    },{
        label: 'Transactions',
        data: transactions_data,
        type: 'bubble',
        "backgroundColor":'rgba(255, 206, 86, 0.2))',
        radius:12,
        hoverRadius: 3,
    }

        ],
    },
    options: {
    hover: {
      mode: 'point'
    },
     scales: {
        xAxes: [{
          type: 'time',
          distribution: 'series',
          time: {
            unit: 'day'
          }
        }]
      },
    tooltips: {
        callbacks: {
            title: function() {},
            label: function (tooltipItems, data) {
            console.log(tooltipItems,"tooltips")
            console.log(data.datasets[tooltipItems.datasetIndex])
            var title = data.datasets[tooltipItems.datasetIndex].label +": "
            var data = "Date: " + data.datasets[tooltipItems.datasetIndex].data[tooltipItems.index].x + ", Amount: " + data.datasets[tooltipItems.datasetIndex].data[tooltipItems.index].y
              return  [title, data];
            }
        }
    },
    scales: {
      xAxes: [{
        type: 'time',
        time: {
                min:Date.parse('process_date[0]'),
                max:Date.parse('process_date[(process_date.length) - 1]'),
                displayFormats:{
                    day:'ddd MM/DD',
                },
                unit:'day',
                round:'day',
            },
            }]
        },
    responsive: true,
    maintainAspectRatio : false,
     scales: {
       yAxes: [{
         ticks: {
           callback: function(value, index, values) {
             return value.toLocaleString("en-US",{style:"currency", currency:"USD"});
           }
         }
       }]
     }
   }
});

var formatted_start_date = moment(process_date[0]).format("MM/DD/YYYY");
$("#historical-chart-search-start-date").datepicker('setStartDate',formatted_start_date)

var formatted_end_date = moment( process_date[(process_date.length) - 1]).format("MM/DD/YYYY");
$("#historical-chart-search-end-date").datepicker('setEndDate',formatted_end_date)

function getDates(startDate, stopDate) {
    var dateArray = [];
    var currentDate = moment(startDate);
    var stopDate = moment(stopDate);
    while (currentDate <= stopDate) {
        dateArray.push( moment(currentDate).format('YYYY-MM-DD') )
        currentDate = moment(currentDate).add(1, 'days');
    }
    return dateArray;

}
